// TODO: Modify, follow:
//   https://goswagger.io/tutorial/custom-server.html

package main

import (
	"log"

	"cooking.buresovi.net/src/app"
	"cooking.buresovi.net/src/persistence"
	"cooking.buresovi.net/src/persistence/meal"
	"cooking.buresovi.net/src/persistence/user"
	"cooking.buresovi.net/src/server"

	"github.com/golang-migrate/migrate/v4"
	"github.com/golang-migrate/migrate/v4/database/postgres"
	_ "github.com/golang-migrate/migrate/v4/source/file"
	_ "github.com/lib/pq"
)

// This file was generated by the swagger tool.
// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func main() {

	dbConf := &persistence.Database{
		Username: "postgres",
		Hostname: "localhost",
		Port:     5432,
		Password: "welcome1",
		Database: "cooking",
	}

	dbConnection := dbConf.ConnectDb()
	defer dbConnection.Close()

	driver, _ := postgres.WithInstance(dbConnection, &postgres.Config{})
	mi, err := migrate.NewWithDatabaseInstance("file://database/migrations", "cooking", driver)
	if err != nil {
		log.Fatal(err)
	}

	mi.Up()

	userSvc := user.NewUserSvcPsql(dbConnection)
	mealSvc := meal.NewMealSvcPsql(userSvc, dbConnection)

	app := app.App{
		MealSvc: mealSvc,
		UserSvc: userSvc,
	}

	server := server.SetupServer(&app)
	defer server.Shutdown()

	server.ConfigureAPI()

	if err := server.Serve(); err != nil {
		log.Fatalln(err)
	}

}
